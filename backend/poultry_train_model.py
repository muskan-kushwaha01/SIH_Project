# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dwCaFIs1s2wPQphK3pHWrfmOfq-9IxrH
"""

import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.ensemble import GradientBoostingClassifier
from sklearn.metrics import accuracy_score, classification_report
import joblib

from google.colab import files
uploaded = files.upload()

df = pd.read_csv("poultry_biosecurity_dataset_v1.csv")

agg_df = df.groupby('Farm_ID').agg({
    'Farm_Size_Acres':'first',
    'Total_Birds':'first',
    'Nearby_Farm_50m':'first',
    'Water_Bodies_Nearby':'first',
    'Proper_Fencing':'first',
    'Clean_Dirty_Zones':'first',
    'Avg_Visitors_Day':'first',
    'Introduce_New_Flocks_Without_Quarantine':'first',
    'Batch_Size':'sum',
    'Batch_Age_Weeks':'mean',
    'Previously_Infected':'sum',
    'Mareks':'sum',
    'Newcastle_ND':'sum',
    'ND_IB':'sum',
    'Gumboro_IBD':'sum',
    'ND_IBD_Booster':'sum',
    'Fowl_Pox':'sum',
    'AE':'sum',
    'Birds_Per_Acre':'mean',
    'Vacc_Coverage_Rate':'mean',
    'Missing_Vaccines_Count':'sum',
    'Biosecurity_Risk_Label':'first'
}).reset_index(drop=True)

# --- Encode categorical variables ---
categorical_cols = ['Nearby_Farm_50m','Water_Bodies_Nearby','Proper_Fencing','Clean_Dirty_Zones','Introduce_New_Flocks_Without_Quarantine']
for col in categorical_cols:
    agg_df[col] = LabelEncoder().fit_transform(agg_df[col].astype(str))

# Encode target
agg_df['Biosecurity_Risk_Label'] = LabelEncoder().fit_transform(agg_df['Biosecurity_Risk_Label'])

# --- Split features and target ---
X = agg_df.drop('Biosecurity_Risk_Label', axis=1)
y = agg_df['Biosecurity_Risk_Label']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# --- Train GBM ---
gbm = GradientBoostingClassifier(n_estimators=200, learning_rate=0.1, max_depth=3, random_state=42)
gbm.fit(X_train, y_train)

# --- Evaluate ---
y_pred = gbm.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print(classification_report(y_test, y_pred))

# --- Save Model ---
joblib.dump(gbm, "poultry_gbm_model.pkl")

from google.colab import files
files.download('poultry_gbm_model.pkl')

